/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Wrapper, WrapperInterface } from "../Wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_auction",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "auctionIdMatchesToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "getMinimumBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "getCurrentHighestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "isFinalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161067e38038061067e8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b03166105fe6100806000398061017652806101f95280610291528061032a52806103d6528061051e52506105fe6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806305261aea146100675780630600d4eb1461008657806333727c4d146100b5578063456b09c1146100e6578063598647f81461011f57806397e2d38014610142575b600080fd5b6100846004803603602081101561007d57600080fd5b5035610174565b005b6100a36004803603602081101561009c57600080fd5b50356101f5565b60408051918252519081900360200190f35b6100d2600480360360208110156100cb57600080fd5b503561028d565b604080519115158252519081900360200190f35b610103600480360360208110156100fc57600080fd5b5035610326565b604080516001600160a01b039092168252519081900360200190f35b6100846004803603604081101561013557600080fd5b508035906020013561038c565b6100d26004803603606081101561015857600080fd5b508035906001600160a01b03602082013516906040013561051a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cf266ed0826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156101da57600080fd5b505af11580156101ee573d6000803e3d6000fd5b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630d607964836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561025b57600080fd5b505afa15801561026f573d6000803e3d6000fd5b505050506040513d602081101561028557600080fd5b505192915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2a106b8836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156102f357600080fd5b505afa158015610307573d6000803e3d6000fd5b505050506040513d602081101561031d57600080fd5b50511592915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636eeb69db836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561025b57600080fd5b60408051602480820185905282518083039091018152604490910182526020810180516001600160e01b031663054d7ed560e31b1781529151815160009384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016938793919290918291908083835b602083106104235780518252601f199092019160209182019101610404565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610485576040519150601f19603f3d011682016040523d82523d6000602084013e61048a565b606091505b50915091508181906101ee5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104df5781810151838201526020016104c7565b50505050905090810190601f16801561050c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663152b2c0a84846040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b15801561059157600080fd5b505afa1580156105a5573d6000803e3d6000fd5b505050506040513d60208110156105bb57600080fd5b505184149050939250505056fea264697066735822122007d23b190c251efbc3024ea10bc25a29048c9f597229418800dc3ca737b8f44b64736f6c63430007060033";

type WrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wrapper__factory extends ContractFactory {
  constructor(...args: WrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _auction: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wrapper> {
    return super.deploy(_auction, overrides || {}) as Promise<Wrapper>;
  }
  override getDeployTransaction(
    _auction: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_auction, overrides || {});
  }
  override attach(address: string): Wrapper {
    return super.attach(address) as Wrapper;
  }
  override connect(signer: Signer): Wrapper__factory {
    return super.connect(signer) as Wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapperInterface {
    return new utils.Interface(_abi) as WrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Wrapper {
    return new Contract(address, _abi, signerOrProvider) as Wrapper;
  }
}
